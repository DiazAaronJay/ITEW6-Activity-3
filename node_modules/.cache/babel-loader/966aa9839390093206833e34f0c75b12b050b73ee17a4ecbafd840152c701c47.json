{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  const _component_ShoppingCart = _resolveComponent(\"ShoppingCart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_HelloWorld, {\n    msg: \"Welcome to Your Vue.js App\"\n  }), _createVNode(_component_ShoppingCart, {\n    cart: $data.cart,\n    onRemove: $options.removeFromCart,\n    onUpdateQuantity: $options.updateCartQuantity\n  }, null, 8 /* PROPS */, [\"cart\", \"onRemove\", \"onUpdateQuantity\"])]);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","alt","src","_createElementBlock","_hoisted_1","_createVNode","_component_HelloWorld","msg","_component_ShoppingCart","cart","$data","onRemove","$options","removeFromCart","onUpdateQuantity","updateCartQuantity"],"sources":["C:\\Users\\aaron\\Desktop\\mytemplate\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n    <ShoppingCart :cart=\"cart\" @remove=\"removeFromCart\" @updateQuantity=\"updateCartQuantity\"/>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\nimport ShoppingCart from './components/ShoppingCart.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    ShoppingCart\n  },\n  data() {\n    return {\n      cart: []\n    }\n  },\n  methods: {\n    // Methods to add, remove, and update items in the cart\n    addToCart(product) {\n      const index = this.cart.findIndex(item => item.name === product.name);\n      if (index !== -1) {\n        this.cart[index].quantity++;\n      } else {\n        this.cart.push({ ...product, quantity: 1 });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    updateCartQuantity(index, newQuantity) {\n      if (newQuantity < 1) {\n        newQuantity = 1;\n      }\n      this.cart[index].quantity = parseInt(newQuantity);\n    }\n  }\n}\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n"],"mappings":";OAEwBA,UAAuB;gCAA3CC,mBAAA,CAA4C;EAAvCC,GAAG,EAAC,UAAU;EAACC,GAAuB,EAAvBH;;;;;uBADtBI,mBAAA,CAIM,cAHJC,UAA4C,EAC5CC,YAAA,CAA8CC,qBAAA;IAAlCC,GAAG,EAAC;EAA4B,IAC5CF,YAAA,CAA0FG,uBAAA;IAA3EC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,QAAM,EAAEC,QAAA,CAAAC,cAAc;IAAGC,gBAAc,EAAEF,QAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}