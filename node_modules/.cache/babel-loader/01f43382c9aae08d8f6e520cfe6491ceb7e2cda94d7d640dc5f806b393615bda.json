{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ShoppingCart = _resolveComponent(\"ShoppingCart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_ShoppingCart, {\n    cart: $data.cart,\n    onRemove: $options.removeFromCart,\n    onUpdateQuantity: $options.updateCartQuantity\n  }, null, 8 /* PROPS */, [\"cart\", \"onRemove\", \"onUpdateQuantity\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_ShoppingCart","cart","$data","onRemove","$options","removeFromCart","onUpdateQuantity","updateCartQuantity"],"sources":["C:\\Users\\aaron\\Desktop\\mytemplate\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <ShoppingCart :cart=\"cart\" @remove=\"removeFromCart\" @updateQuantity=\"updateCartQuantity\"/>\n  </div>\n</template>\n\n<script>\nimport ShoppingCart from './components/ShoppingCart.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    ShoppingCart\n  },\n  data() {\n    return {\n      cart: []\n    }\n  },\n  methods: {\n    // Methods to add, remove, and update items in the cart\n    addToCart(product) {\n      const index = this.cart.findIndex(item => item.name === product.name);\n      if (index !== -1) {\n        this.cart[index].quantity++;\n      } else {\n        this.cart.push({ ...product, quantity: 1 });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    updateCartQuantity(index, newQuantity) {\n      if (newQuantity < 1) {\n        newQuantity = 1;\n      }\n      this.cart[index].quantity = parseInt(newQuantity);\n    }\n  }\n}\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAA0FC,uBAAA;IAA3EC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,QAAM,EAAEC,QAAA,CAAAC,cAAc;IAAGC,gBAAc,EAAEF,QAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}